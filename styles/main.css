:root {
  --open-sans: "Open Sans", serif;
  --nunito-sans: "Nunito Sans", serif;

  --accent-light: #fbb731;
  --accent-dark: #f37335;
  --dark: #443737;
  --light: #ffffff;
  --dark-rgb: 68, 55, 55;
  --light-rgb: 255, 255, 255;
  --line: #dedede;

  --tr: 0.2s;
}

body {
  font-family: var(--open-sans);
}

a {
  text-decoration: none;
}

.container {
  /* чтобы контент не выходил за пределы определенной ширины -> */
  width: 100%;
  max-width: 1182px;
  margin: 0 auto;
  /* чтобы в мобильной версии контент не прилипал по краям -> */
  padding-left: 15px;
  padding-right: 15px;
}

/* Header */

.header {
  border-bottom: 1px solid var(--line);
}

.header-wrapper {
  /* с помощью flex расставляем элементы (логотип, nav, корзина)-> */
  display: flex;
  align-items: center;
  gap: 196px;
  padding-top: 26px;
  padding-bottom: 26px;
}

.logo {
  display: block;
  width: 176px;
  height: 56px;
  background-image: url(../images/logo.svg);
  /* чтобы картинка не дублировалась -> */
  background-repeat: no-repeat;
  /* для работы с адаптивом -> */
  background-size: contain;
}

.nav {
  /* равномерно распределяем пространство между элементами ->  */
  flex-grow: 1;
  /* с помощью flex расставляем 4 элемента внутри nav ->  */
  display: flex;
  gap: 47px;
}

.nav-link {
  color: var(--dark);
  font-size: 20px;
  font-weight: 600;
}
/* добавляем подчеркивание для элементов nav с помощью ::after - тут подчеркивание прозрачное, чтобы цвет появлялся только при наведении курсора -> */
.nav-link::after {
  /* без content не будет работать псевдоэлемент -> */
  content: "";
  display: block;
  width: 100%;
  height: 3px;
  background-color: transparent;
  border-radius: 1.5px;
  transition: var(--tr);
}
/* добавляем цвет для подчеркиваний элементов nav -> */
.nav-link:hover::after {
  background-color: var(--accent-light);
}

.cart {
  display: flex;
  align-items: center;
  gap: 10px;
  color: var(--dark);
  font-size: 15px;
  font-weight: 700;
  /* чтобы разместить card-count на иконке корзины -> */
  position: relative;
}

/* добавляем иконку корзины через ::before -> */
.cart::before {
  content: "";
  display: block;
  width: 30px;
  height: 26px;
  background-image: url(../images/cart.svg);
  background-repeat: no-repeat;
  background-size: contain;
}

.cart-count {
  /* делаем элемент с цифрой круглым -> */
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 100%;
  /* стилизуем элемент -> */
  width: 17px;
  height: 17px;
  font-size: 10px;
  color: var(--light);
  background-color: var(--accent-dark);
  /* размещаем элемент на иконке корзины -> */
  position: absolute;
  left: 17px;
  bottom: 0;
}

/* Hero */

.hero {
  background-image: url(../images/hero.jpg);
  background-repeat: no-repeat;
  /* чтобы подстраивался под ширину -> */
  background-size: cover;
  /* центрируем фон, так как экран может быть слишком широким или слишком узким - чтобы контент был по центру ->  */
  background-position: center center;
  text-align: center;
  /* чтобы расширить блок -> */
  padding-top: 142px;
  padding-bottom: 142px;
}

.hero-contact {
  background-image: url(../images/hero-contact.jpg);
}

.breadcrumbs {
  /* чтобы поставить в одну линию -> */
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 16px;
  /* убираем точки пунктов */
  list-style-type: none;
  /* убираем padding слева, чтобы выравнить элемент по центру -> */
  padding-left: 0;
  color: rgba(var(--light-rgb), 0.5);
  font-size: 15px;
  margin-top: 0;
  margin-bottom: 0;
}

/* чтобы отодвинуть слэш / вправо -> */
.breadcrumbs-item {
  position: relative;
}

/* добавляем слэш / в breadcrumbs между Главная и Меню - применяем это для всех элементов, кроме последнего - ставим / после с помощью ::after -> */
.breadcrumbs-item:not(:last-child)::after {
  content: "/";
  /* отодвигаем слэш / вправо, т.к. изначально он вплотную к тексту Главная -> */
  position: absolute;
  right: -12px;
}

.breadcrumbs-link {
  color: rgba(var(--light-rgb), 0.5);
}

.breadcrumbs-link:hover {
  color: var(--accent-light);
}

.hero-title {
  font-family: var(--nunito-sans);
  font-size: 79px;
  font-weight: 700;
  color: var(--light);
  /* чтобы все первые буквы были заглавные -> */
  text-transform: capitalize;
  margin-top: 20px;
  margin-bottom: 18px;
}

.hero-description {
  /* когда применяем такое свойство на блок, он автоматически хочет уйти влево, поэтому центрируем с помощью margin -> */
  max-width: 320px;
  margin: 0 auto;
  color: rgba(var(--light-rgb), 0.8);
  font-size: 15px;
  /* в процентах значение адаптивное -> */
  line-height: 160%;
}

/* Banner */

.banner {
  margin-top: 140px;
  margin-bottom: 50px;
}

.banner-wrapper {
  background-image: url(../images/banner.jpg);
  background-repeat: no-repeat;
  background-size: cover;
  padding: 100px;
}

.banner-title {
  font-family: var(--nunito-sans);
  font-size: 60px;
  font-weight: 900;
  text-transform: uppercase;
  color: var(--light);
  margin-top: 0;
  margin-bottom: 11px;
}

.banner-title span {
  font-family: var(--open-sans);
  font-size: 14px;
  font-weight: 600;
  text-transform: uppercase;
  color: var(--light);
  background-color: var(--accent-dark);
  border-radius: 14px;
  display: block;
  max-width: 95px;
  /* 1-ый вариант для выравнивания слова по центру -> */
  /* text-align: center;
  padding: 5px 0; */
  /* 2-ой вариант для выравнивания слова по центру -> */
  padding: 5px 18.5px;
  box-sizing: border-box;
  margin-bottom: 7px;
}

.banner-description {
  font-size: 15px;
  font-weight: 400;
  font-style: normal;
  line-height: 160%;
  color: rgba(var(--light-rgb), 0.8);
  max-width: 328px;
  margin-bottom: 13px;
}

.banner-btn {
  font-family: var(--nunito-sans);
  font-size: 14px;
  font-weight: 700;
  text-transform: uppercase;
  text-decoration: none;
  color: var(--dark);
  background-color: var(--accent-light);
  border: none;
  border-radius: 5px;
  padding: 21px 25px;
  transition: var(--tr);
}

.banner-btn:hover {
  background-color: var(--accent-dark);
}

/* Menu */

.menu-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 100px;
  margin-bottom: 35px;
}

.menu-title {
  font-family: var(--nunito-sans);
  font-size: 44px;
  font-weight: 700;
  color: var(--dark);
  text-transform: uppercase;
  margin-top: 5px;
  margin-bottom: 0;
}

.menu-select {
  font-size: 15px;
  font-weight: 400;
  color: var(--dark);
  border: 1px solid var(--line);
  border-radius: 22px;
  /* сбрасываем стили по умолчанию (стрелку у select) -> */
  appearance: none;
  /* 1-ый вариант как задать размер -> */
  flex-basis: 279px;
  padding: 13px 30px;
  /* 2-ой вариант как задать размер -> */
  /* width: 279px;
  height: 44px;
  padding-left: 30px; */
  margin-top: 5px;
  background-image: url(../images/menu/chevron-down.svg);
  background-size: 14px 10px;
  background-repeat: no-repeat;
  /* 1-ый вариант как задать положение стрелке -> */
  background-position: 89% center;
  /* 2-ой вариант как задать положение стрелке -> */
  /* background-position: right 29px center; */
}

.menu-box {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: auto;
  gap: 50px 20px;
}

.menu-item {
  font-family: var(--nunito-sans);
  text-align: center;
}

/* настроим, чтобы изображение всегда было нужного размера - ширину трогать не будем, т.к. с помощью grid у нас и так она будет автоматически подстраиваться ->  */
.menu-thumb {
  width: 100%;
  height: 430px;
  /* будем использовать для внутреннего img -> */
  position: relative;
  overflow: hidden;
  margin-bottom: 22px;
}

.menu-thumb img {
  width: 100%;
  height: 100%;
  position: absolute;
  /* ставим центр изображения по центру -> */
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  /* чтобы изображение не растягивалось из-за height: 100%; -> */
  object-fit: contain;
}

.menu-name {
  font-size: 30px;
  font-weight: 600;
  color: var(--dark);
  margin-top: 0;
  margin-bottom: 10px;
}

.menu-price {
  font-size: 20px;
  font-weight: 700;
  color: rgba(var(--dark-rgb), 0.5);
  margin-top: 0;
  margin-bottom: 22px;
}

.menu-btn {
  font-family: var(--nunito-sans);
  font-size: 14px;
  font-weight: 700;
  color: #1e2f40;
  background-color: var(--accent-light);
  border: none;
  border-radius: 5px;
  text-transform: uppercase;
  text-decoration: none;
  margin: 0 auto;
  padding: 11px 36px 11px 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  /* раздвигаем значок с текстом -> */
  gap: 10px;
  transition: var(--tr);
}

.menu-btn::before {
  content: "";
  display: block;
  width: 18px;
  height: 18px;
  background-image: url(../images/menu/cart-menu.svg);
  background-repeat: no-repeat;
  background-size: contain;
  padding-right: 5px;
}

.menu-btn:hover {
  background-color: var(--accent-dark);
}

.menu-header-additionally {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: 95px;
  margin-bottom: 35px;
}

/* Footer */

.footer {
  background-color: #1e2f40;
  padding-top: 117px;
  padding-bottom: 120px;
  margin-top: 140px;
}

.footer-wrapper {
  display: flex;
  justify-content: space-between;
}

.footer-logo {
  display: block;
  width: 63px;
  height: 56px;
  background-image: url(../images/logo-light-min.svg);
  background-repeat: no-repeat;
  background-size: contain;
}

.footer-title {
  font-family: var(--nunito-sans);
  font-size: 20px;
  font-weight: 800;
  color: var(--light);
  text-transform: uppercase;
  margin-top: 0;
  margin-bottom: 23px;
}

/* 1-ый вариант оформления списка ссылок -> */
.footer-nav {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.footer-link {
  font-size: 15px;
  font-weight: 400;
  color: rgba(var(--light-rgb), 0.9);
  transition: var(--tr);
  /* 2-ой вариант оформления списка ссылок -> */
  /* display: block;
  padding-bottom: 16px;  */
}

.footer-link:hover {
  color: var(--accent-light);
}

.footer-list {
  font-size: 15px;
  font-weight: 700;
  line-height: 160%;
  color: var(--light);
  list-style-type: none;
  padding-left: 0;
  margin: 0;
}

.footer-list span {
  font-weight: 400;
  color: rgba(var(--light-rgb), 0.9);
  display: block;
}

.footer-list-item:not(:last-child) {
  margin-bottom: 14px;
}

.footer-tel {
  font-family: var(--nunito-sans);
  font-size: 20px;
  font-weight: 800;
  color: var(--accent-light);
  text-transform: uppercase;
  display: block;
  transition: var(--tr);
}

.footer-tel:not(:first-child) {
  padding-top: 15px;
}

.footer-tel:hover {
  color: var(--accent-dark);
}

/* Contacts */

.contact-main {
  display: flex;
  align-items: center;
  gap: 20px;
  max-width: 1057px;
  margin: 140px auto 60px;
}

.contact-map {
  flex-basis: 680px;
}

.contact-adress {
  flex-basis: calc(100% - 680px - 20px);
  list-style-type: none;
  padding-left: 0;
}

.contact-adress li:not(:last-child) {
  margin-bottom: 26px;
}

.contact-adress li span {
  display: block;
  font-size: 15px;
  line-height: 160%;
}

.contact-adress li span:first-child {
  font-family: var(--nunito-sans);
  font-size: 20px;
  font-weight: 700;
  line-height: 190%;
  text-transform: uppercase;
  margin-left: 3px;
  margin-bottom: 4px;
}

.contact-adress li span:last-child {
  font-weight: 700;
  margin-top: 10px;
}

.contact-additionally {
  display: flex;
  justify-content: space-between;
  gap: 20px;
  max-width: 1057px;
  list-style-type: none;
  padding-left: 0;
  margin: 0 auto;
}

.contact-additionally li {
  font-size: 15px;
  display: flex;
  align-items: center;
  gap: 15px;
}

.contact-additionally li::before {
  content: "";
  display: block;
  width: 80px;
  height: 80px;
  background-repeat: no-repeat;
  background-size: cover;
}

.contact-additionally li:nth-child(1):before {
  background-image: url(../images/contact/01.svg);
}
.contact-additionally li:nth-child(2):before {
  background-image: url(../images/contact/02.svg);
}
.contact-additionally li:nth-child(3):before {
  background-image: url(../images/contact/03.svg);
}

.contact-info,
.contact-tel {
  display: block;
  color: var(--dark);
  font-family: var(--nunito-sans);
  font-size: 20px;
  font-weight: 700;
  line-height: 140%;
  margin-top: 5px;
}

.contact-tel {
  transition: var(--tr);
}

.contact-tel:hover {
  color: var(--accent-light);
}
